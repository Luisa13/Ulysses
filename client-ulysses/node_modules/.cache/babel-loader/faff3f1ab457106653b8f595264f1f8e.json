{"ast":null,"code":"const API_BASE_URL = \"http://localhost:8080\";\nexport const login = async (username, password) => {\n  console.info(\"sending request...\");\n  const response = await fetch(`${API_BASE_URL}/auth`, {\n    credentials: 'include',\n    method: 'POST',\n    headers: { ...jsonHeader,\n      ...buildBasicAuthHeader(username, password)\n    }\n  });\n  return response.text();\n};\nexport const jsonHeader = {\n  'Content-Type': 'application/json;'\n};\nexport const buildBasicAuthHeader = (username, password) => {\n  return {\n    'Authorization': 'Basic ' + btoa(username + ':' + password)\n  };\n};","map":{"version":3,"sources":["/home/luisa/github/Ulysses/client-ulysses/src/Service/ApiService.ts"],"names":["API_BASE_URL","login","username","password","console","info","response","fetch","credentials","method","headers","jsonHeader","buildBasicAuthHeader","text","btoa"],"mappings":"AACA,MAAMA,YAAY,GAAG,uBAArB;AAEA,OAAO,MAAMC,KAAK,GAAG,OAAOC,QAAP,EAAwBC,QAAxB,KAA6C;AAChEC,EAAAA,OAAO,CAACC,IAAR,CAAa,oBAAb;AACE,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEP,YAAa,OAAjB,EAAyB;AACjDQ,IAAAA,WAAW,EAAE,SADoC;AAEjDC,IAAAA,MAAM,EAAE,MAFyC;AAGjDC,IAAAA,OAAO,EAAE,EACL,GAAGC,UADE;AAEL,SAAGC,oBAAoB,CAACV,QAAD,EAAYC,QAAZ;AAFlB;AAHwC,GAAzB,CAA5B;AAQA,SAAOG,QAAQ,CAACO,IAAT,EAAP;AACH,CAXM;AAaP,OAAO,MAAMF,UAAU,GAAG;AACtB,kBAAgB;AADM,CAAnB;AAIL,OAAO,MAAMC,oBAAoB,GAAG,CAACV,QAAD,EAAmBC,QAAnB,KAAwC;AAC1E,SAAO;AACL,qBAAiB,WAAWW,IAAI,CAACZ,QAAQ,GAAG,GAAX,GAAiBC,QAAlB;AAD3B,GAAP;AAGD,CAJM","sourcesContent":["\nconst API_BASE_URL = \"http://localhost:8080\";\n\nexport const login = async (username:string, password: string) => {\n  console.info(\"sending request...\")\n    const response = await fetch(`${API_BASE_URL}/auth`, {\n        credentials: 'include',\n        method: 'POST',\n        headers: {\n            ...jsonHeader,\n            ...buildBasicAuthHeader(username , password)\n          }\n    });\n    return response.text();\n};\n\nexport const jsonHeader = {\n    'Content-Type': 'application/json;'\n  };\n  \n  export const buildBasicAuthHeader = (username: string, password: string) => {\n    return {\n      'Authorization': 'Basic ' + btoa(username + ':' + password)\n    };\n  };"]},"metadata":{},"sourceType":"module"}